plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "kotlin-kapt"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.jlleitschuh.gradle.ktlint' version "$ktlint_version"
    id 'com.hyperdevs.poeditor'
}

kotlin {
    jvmToolchain(17)
}

poEditor {
    apiToken = project["poEditorApiToken"]
    projectId = Integer.parseInt(project["poEditorProjectId"])
    defaultLang = "pl"
    filters = ["translated"]
    unquoted = true
}

android {
    namespace 'pl.piotrskiba.angularowo'
    compileSdk Integer.parseInt(androidCompileSdkVersion)
    defaultConfig {
        applicationId "pl.piotrskiba.angularowo"
        minSdk Integer.parseInt(androidMinSdkVersion)
        targetSdk Integer.parseInt(androidTargetSdkVersion)
        versionCode 76
        versionName "4.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        release {
            keyAlias project["signingKeyAlias"]
            keyPassword project["signingKeyPass"]
            storeFile file(project["signingStoreFilePath"])
            storePassword project["signingStorePass"]
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            ext.enableCrashlytics = false
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    implementation project(":domain")
    implementation project(":data")

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference-ktx:1.2.1'

    testImplementation platform("org.junit:junit-bom:$junit_version")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "org.amshove.kluent:kluent-android:$kluent_version"

    // Dagger
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.3.2'

    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // OkHttp (for websockets)
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp-tls:$okhttp_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-inappmessaging-display-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'

    // PinEntryEditText
    implementation('com.alimuzaffar.lib:pinentryedittext:2.0.6') {
        // Exclude is only needed if you already have
        // androidx.appcompat as a dependency in your app.
        exclude group: 'androidx.appcompat', module: 'appcompat'
    }

    // AdMob
    implementation 'com.google.android.gms:play-services-ads:22.5.0'

    // MultiDex
    implementation "androidx.multidex:multidex:2.0.1"

    // Activity
    implementation 'androidx.activity:activity-ktx:1.8.1'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // RxJava
    implementation "io.reactivex.rxjava3:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"

    // BindingCollectionAdapter
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:4.0.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:4.0.0'

    // WorkManager
    implementation("androidx.work:work-runtime-ktx:2.8.1")

    // MaterialShowcase
    implementation 'com.github.deano2390:MaterialShowcaseView:1.3.7'

    // Navigation
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // In-app updates
    implementation("com.google.android.play:app-update:$inappupdates_version")
    implementation("com.google.android.play:app-update-ktx:$inappupdates_version")

    // Biometric
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha05"
}

configurations.configureEach {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

repositories {
    mavenCentral()
}
